using System.Collections;
using System.Collections.Generic;
using System.Linq;

using UnityEngine;

public class Twitter : CriticalNode
{
    [Header("Twitter Parameters")]
    public Tweets tweets = new Tweets();
    public int numOfTweets;
    public TextAsset JsonTwitter; 
    public class Tweets
    {
        public int[,] tweetsPerDay;

        public Tweets()
        {
            tweetsPerDay = new int[,]
            {
                {-1, -1, -1, 1, 0, 0},
                {1, 0, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, 0},
                {0, 0, 0, -1, 0, -1},
                {-1, -1, -1, 0, -1, 0},
                {-1, -1, 0, 0, 0, 0},
                {-1, -1, 0, -1, -1, 1},
                {-1, -1, -1, -1, 0, -1},
                {-1, -1, -1, 0, -1, -1},
                {0, -1, 0, -1, -1, -1},
                {0, -1, -1, -1, 0, 0},
                {-1, 0, 0, 0, 0, -1},
                {-1, 0, -1, -1, 0, 0},
                {0, -1, 0, -1, 1, -1},
                {-1, -1, -1, 0, 0, 0},
                {-1, -1, -1, 0, -1, -1},
                {-1, 1, 0, 0, 1, 0},
                {-1, -1, -1, -1, -1, -1},
                {-1, -1, -1, 0, 0, 0},
                {0, -1, 0, -1, -1, -1},
                {-1, 0, -1, 0, -1, -1},
                {0, 0, 0, 0, -1, -1},
                {0, -1, -1, 1, -1, -1},
                {-1, -1, 0, -1, -1, -1},
                {-1, 0, -1, -1, 0, -1},
                {0, -1, -1, -1, 0, -1}, 
                {-1, -1, 0, 0, -1, 0}, 
                {0, 0, 0, -1, -1, 0}, 
                {-1, -1, 0, 0, 0, -1}, 
                {0, -1, 1, -1, -1, -1}, 
                {-1, 0, 0, 0, -1, -1}, 
                {0, 0, 0, -1, -1, 0}, 
                {-1, 0, -1, -1, 0, -1}, 
                {0, -1, -1, 0, -1, -1}, 
                {0, 0, -1, 0, 0, 0}, 
                {0, 0, 0, -1, 0, 1}, 
                {0, -1, -1, 1, -1, 0}, 
                {-1, -1, 0, 0, -1, 0}, 
                {0, 1, -1, -1, 0, -1}, 
                {0, -1, 0, -1, 0, -1}, 
                {-1, -1, -1, 0, 0, 0}, 
                {-1, -1, -1, -1, -1, -1}, 
                {-1, 0, 0, -1, -1, 0}, 
                {0, 0, -1, -1, 0, 0}, 
                {0, -1, -1, 0, -1, -1},
                {-1, 0, 1, 0, -1, -1}, 
                {-1, -1, 0, 0, 0, -1}, 
                {-1, 0, -1, 0, -1, -1},
                {0, -1, 0, -1, -1, 0}, 
                {-1, -1, 0, 0, -1, 0}, 
                {0, 0, 0, 0, 0, -1}, 
                {0, 1, 0, -1, -1, 1}, 
                {-1, 0, -1, -1, 0, 0}, 
                {-1, 0, 0, 1, -1, -1}, 
                {0, -1, 0, -1, 0, -1}, 
                {0, -1, -1, -1, -1, 0}, 
                {0, 0, -1, -1, -1, -1}, 
                {-1, -1, -1, 0, 0, -1}, 
                {-1, 0, 0, 0, -1, -1}, 
                {0, -1, 0, -1, 0, -1}, 
                {0, 0, -1, 1, 0, -1}, 
                {0, -1, -1, 0, -1, -1}, 
                {-1, -1, 1, 0, 0, 0}, 
                {-1, -1, -1, 0, -1, 1}, 
                {-1, -1, 0, -1, 0, -1}, 
                {-1, 0, -1, 0, 0, 1}, 
                {1, -1, -1, -1, -1, 0}, 
                {-1, 0, -1, -1, -1, 0}, 
                {-1, 0, 0, -1, 0, -1}, 
                {-1, 0, 0, -1, -1, 0}, 
                {-1, 0, -1, -1, 0, -1}, 
                {0, -1, -1, -1, 0, 0}, 
                {0, 0, 1, 0, -1, 0}, 
                {0, -1, -1, 0, 0, 0}, 
                {-1, -1, 0, -1, -1, -1}, 
                {-1, -1, 0, 0, -1, 0}, 
                {-1, 0, -1, 0, 0, -1}, 
                {1, 0, -1, 0, -1, -1}, 
                {0, -1, -1, -1, -1, 1}, 
                {0, 0, 0, -1, -1, -1}, 
                {0, -1, 1, -1, -1, 0},
                {-1, 0, -1, -1, 0, -1}, 
                {0, 0, 1, 1, -1, -1}, 
                {-1, -1, 0, -1, 0, -1}, 
                {-1, -1, 0, -1, 0, 0}, 
                {-1, 0, -1, -1, 0, 0}, 
                {-1, -1, 0, -1, 0, -1}, 
                {-1, 0, -1, 0, -1, -1}, 
                {-1, 0, 0, 0, 0, 1}, 
                {0, -1, 0, 0, -1, -1}, 
                {-1, 0, 0, 1, -1, -1}, 
                {0, -1, 0, 0, 0, 0}, 
                {-1, 0, -1, 0, -1, -1}, 
                {-1, 0, 1, 0, -1, 0}, 
                {0, -1, -1, -1, -1, 0}, 
                {0, 0, 0, -1, -1, -1}, 
                {-1, 0, -1, -1, -1, -1}, 
                {0, 0, 0, -1, -1, -1}, 
                {-1, 1, -1, 0, -1, 0}, 
                {-1, -1, -1, 1, 0, -1}, 
                {-1, 1, 0, -1, -1, 0}, 
                {-1, 0, -1, -1, -1, -1}, 
                {-1, 1, 0, 0, 0, -1}, 
                {-1, 0, 0, -1, 0, -1}, 
                {0, 0, -1, -1, 0, -1}, 
                {0, 0, -1, -1, -1, 0}, 
                {0, 1, -1, -1, 0, -1}, 
                {0, 0, 0, 0, -1, 0}, 
                {-1, 0, -1, -1, -1, 0}, 
                {1, 0, -1, 0, 0, -1}, 
                {-1, -1, -1, 0, 0, 0}, 
                {0, -1, -1, -1, -1, 0}, 
                {-1, -1, -1, -1, 0, 0}, 
                {0, -1, -1, -1, -1, 1}, 
                {-1, 0, -1, 0, -1, -1}, 
                {-1, 1, 0, -1, -1, 1}, 
                {0, -1, -1, 0, -1, 0}, 
                {-1, -1, -1, -1, -1, 1},
                {0, 0, 0, -1, -1, 0}, 
                {0, -1, 0, -1, 0, 0}, 
                {-1, -1, 0, 0, -1, -1}, 
                {0, 0, 0, 0, -1, -1}, 
                {-1, 0, -1, -1, -1, -1}, 
                {-1, -1, -1, -1, -1, 0},
                {0, -1, -1, -1, 0, -1}, 
                {0, 0, -1, 0, 0, -1}, 
                {0, 1, 1, -1, -1, 0}, 
                {-1, 0, 0, 0, 0, -1}, 
                {0, -1, -1, 0, 0, -1}, 
                {0, 0, -1, 0, -1, -1}, 
                {0, -1, 0, -1, 0, -1}, 
                {0, -1, -1, -1, -1, 1}, 
                {-1, 0, 0, 0, -1, 0}, 
                {-1, 0, 1, 0, -1, 0}, 
                {-1, -1, 0, 0, 0, -1}, 
                {-1, 0, -1, -1, 0, -1}, 
                {0, 0, -1, -1, 0, 0}, 
                {-1, -1, 0, 0, 0, 0}, 
                {-1, -1, -1, 0, -1, -1}, 
                {-1, -1, -1, -1, -1, -1}, 
                {-1, 0, 0, -1, -1, -1}, 
                {0, -1, 0, 0, -1, 0}, 
                {0, -1, 0, 1, 1, -1}, 
                {-1, 0, -1, 0, 0, 0}, 
                {0, -1, 0, -1, -1, 0}, 
                {0, -1, 0, 0, -1, 0}, 
                {-1, -1, 0, -1, 0, -1}, 
                {0, -1, 0, -1, -1, -1}, 
                {-1, 1, -1, 0, 0, 0}, 
                {-1, 0, -1, 0, 1, 0}, 
                {-1, 0, -1, -1, 0, 0}
            };
        }
    }

    void Start()
    {
        PersuasionFactor = WorldParameters.twitterFactor;
    }

    public override void LoadData()
    {
        //JsonTwitter = Resources.Load<TextAsset>("TweetsData");
        //tweets = JsonUtility.FromJson<Tweets>(JsonTwitter.text);
        numOfTweets = tweets.tweetsPerDay.Length;

    }

    public override void PolarizeStrategy()
    {
        double ASatisfaction, BSatisfaction;
        foreach (Citizen user in Users)
        {
            for (int i = 0; i < tweets.tweetsPerDay.GetLength(1); i++) 
            {
                ASatisfaction = tweets.tweetsPerDay[CurrentTick, i];
                BSatisfaction = 0 - ASatisfaction;
                if (ASatisfaction != 0)
                    PolarizeCitizen(user, ASatisfaction, BSatisfaction);
            }
        }
    }
}